<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web Service on 泥土巢</title>
    <link>http://nituchao.com/tags/web-service/</link>
    <description>Recent content in Web Service on 泥土巢</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2017, nituchao | All rights reserved.</copyright>
    <lastBuildDate>Wed, 11 Dec 2013 14:06:00 +0800</lastBuildDate>
    
	<atom:link href="http://nituchao.com/tags/web-service/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Apache CXF解析Map/HashMap</title>
      <link>http://nituchao.com/post/2013/apache-cxf-parse-hash-map/</link>
      <pubDate>Wed, 11 Dec 2013 14:06:00 +0800</pubDate>
      
      <guid>http://nituchao.com/post/2013/apache-cxf-parse-hash-map/</guid>
      <description>项目中WebService框架用的是Apache CXF，但是在使用中发现Apache CXF不支持解析Map和HashMap，而且SOAP报文(XML)和JavaBean的转化是通过JAXB实现的，没办法，自己写了个Map到XML的适配器，来实现两者的转化。
Map适配器 MapAdapter用来完成Java的Map类型与XML中对应节点的转换。
以MapAdatper为中心，一边是XML类型的SOAP报文，一边是以HashMap为元素的list列表。通过以下两个方法完成双向转换:
 unmarshal: 完成XML到JAVA的转换。 marshal: 完成JAVA到XML的转换。  该适配器会通过注解在具体的实体类上指定。
import java.util.HashMap; import java.util.Map; import javax.xml.bind.annotation.adapters.XmlAdapter; /** * Map适配器，完成Java中map与XML中对应节点的转换 * * &amp;lt;p&amp;gt; * detailed comment * @author zWX184091 2013-8-15 * @see * @since 1.0 */ public class MapAdapter extends XmlAdapter&amp;lt;MapConvertor, HashMap&amp;lt;String, String&amp;gt;&amp;gt; { /** * XML to JAVA * * @param map * @return HashMap&amp;lt;String, String&amp;gt; * @throws Exception */ @Override public HashMap&amp;lt;String, String&amp;gt; unmarshal(MapConvertor map) throws Exception { // TODO Auto-generated method stub HashMap&amp;lt;String, String&amp;gt; result = new HashMap&amp;lt;String, String&amp;gt;(); // 遍历MapConvertor，将XML节点内容写入JavaBean Map对象 for (MapConvertor.</description>
    </item>
    
  </channel>
</rss>